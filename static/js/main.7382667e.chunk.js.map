{"version":3,"sources":["components/contactList.jsx","components/skillslist.jsx","components/employeeList.jsx","components/viewData.jsx","Pages/formpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactList","props","contact","map","val","idx","type","eid","number","style","padding","required","onChange","e","handleChange","name","data-id","id","className","placeholder","paddingTop","pattern","onClick","add","aria-hidden","delete","c_index","SkillsList","skills","s_index","newDate","Date","EmployeeList","employee","designation","dateOfBirth","marginTop","float","deleteNewEmployee","htmlFor","color","marginBottom","borderBottom","addNewConactRow","clickOnContactDelete","addNewSkillsRow","clickOnSkillsDelete","max","e_index","ViewData","class","v","i","downloadFile","Form","state","Math","random","viewData","includes","target","dataset","value","console","log","setState","addNewEmployee","prevState","record","filter","sindex","eindex","length","slice","alert","deteteContactRow","index","deteteSkillsRow","handleSubmit","preventDefault","a","edata","j","k","fileName","json","JSON","stringify","blob","Blob","URL","createObjectURL","href","link","document","createElement","download","body","appendChild","click","removeChild","onSubmit","this","bind","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7382667e.chunk.js","sourcesContent":["import React from \"react\"\r\nconst ContactList = (props) => {\r\n  return (\r\n    props.contact.map((val, idx) => {\r\n      let type = `type-${idx}-${props.eid}`, number = `number-${idx}-${props.eid}`;\r\n      return (\r\n        <tr key={val.c_index}>\r\n          <td style={{padding:'0'}} >\r\n            <input type=\"text\" required onChange={(e)=>props.handleChange(props.eid,e)}  name=\"type\" data-id={idx} id={type} className=\"form-control \" placeholder=\"Type\" />\r\n          </td>\r\n          <td style={{paddingTop:'0'}}>\r\n            <input type=\"number\" pattern=\"[5-9]{1}[0-9]{9}\" onChange={(e)=>props.handleChange(props.eid,e)} required name=\"number\" id={number} data-id={idx} className=\"form-control \" placeholder=\"Number\" />\r\n          </td>\r\n          <td style={{paddingTop:'0'}}>\r\n            {\r\n            idx===0?<button onClick={()=>props.add(props.eid)} type=\"button\" className=\"btn btn-primary text-center\"><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></button>\r\n            : <button className=\"btn btn-danger\" onClick={(() => props.delete(props.eid,val))} ><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n            }\r\n          </td>\r\n        </tr >\r\n      )\r\n    })\r\n  )\r\n}\r\nexport default ContactList;","import React from \"react\"\r\nconst SkillsList = (props) => {\r\n  return (\r\n    props.skills.map((val, idx) => {\r\n      let skills = `skills-${idx}`;\r\n      return (\r\n        <tr key={val.s_index}>\r\n          <td style={{padding:'0'}}>\r\n            <input type=\"text\" required name=\"skills\" data-id={idx} onChange={(e)=>props.handleChange(props.eid,e)} id={skills} className=\"form-control\" placeholder=\"Enter Skills\" />\r\n          </td>\r\n          <td style={{paddingTop:'0'}} >\r\n            {\r\n            idx===0?<button onClick={()=>props.add(props.eid)} type=\"button\" className=\"btn btn-primary text-center\"><i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></button>\r\n            : <button className=\"btn btn-danger\" onClick={(() => props.delete(props.eid,val))} ><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\r\n            }\r\n          </td>\r\n        </tr >\r\n      )\r\n    })\r\n  )\r\n}\r\nexport default SkillsList;","import React from \"react\";\r\nimport ContactList from './contactList';\r\nimport SkillsList from './skillslist';\r\nlet newDate = new Date();\r\nconst EmployeeList = (props) => {\r\n    return (\r\n        props.employee.map((val, idx) => {\r\n            let name = `name-${idx}`, designation = `designation-${idx}`,dateOfBirth = `dateOfBirth-${idx}`;\r\n            return (\r\n                <div key={val.e_index}>\r\n                        <div className=\"row\" style={{ marginTop: 20 }}>\r\n                            <div className=\"col-sm-8 mx-auto\">\r\n                                <div className=\"card\">\r\n                                <div>{ idx===0?(\r\n                                    <div className=\"card-header\"> Employee {idx+1}</div>\r\n                                ):(\r\n                                    <div className=\"card-header\"> Employee {idx+1} <span style={{float:'right',marginTop:'-8px'}}><button className=\"btn btn-danger\" onClick={(() => props.deleteNewEmployee(val))} ><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button></span></div>\r\n                                )\r\n                                }\r\n                                    </div>\r\n                                    <div className=\"form-group row\" style={{padding:'10px'}} >\r\n                                    <label htmlFor={name} className=\"col-sm-2 col-form-label\">Name<span style={{color:\"red\"}}>*</span></label>\r\n                                    <div className=\"col-sm-4\">\r\n                                    <input type=\"text\" name=\"name\" onChange={(e) => props.handleChange(idx, e)} required data-id={idx} id={name} className=\"form-control\" placeholder=\"Enter Name\" />\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\" style={{padding:'10px'}} >\r\n                                    <label htmlFor={designation}  className=\"col-sm-2 col-form-label\">Designation<span style={{color:\"red\"}}>*</span></label>\r\n                                    <div className=\"col-sm-4\">\r\n                                    <input type=\"text\" name=\"designation\" onChange={(e) => props.handleChange(idx, e)} required data-id={idx} id={designation}  className=\"form-control\" placeholder=\"Enter Designation\"></input>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\" style={{padding:'10px'}} >\r\n                                    <label className=\"col-sm-2 col-form-label\">Contact<span style={{color:\"red\"}}>*</span></label>\r\n                                    <div className=\"col-sm-8\">\r\n                                    <table className=\"table\" style={{marginBottom:'0'}} >\r\n                                    <tbody style={{borderBottom:'1px solid white'}} >\r\n                                    <ContactList add={props.addNewConactRow} handleChange={props.handleChange} delete={props.clickOnContactDelete} eid={idx} contact={props.employee[idx].contact} />\r\n                                    </tbody>\r\n                                    </table> \r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\" style={{padding:'10px'}} >\r\n                                    <label className=\"col-sm-2 col-form-label\">Skills<span style={{color:\"red\"}}>*</span></label>\r\n                                    <div className=\"col-sm-4\">\r\n                                    <table className=\"table\" style={{marginBottom:'0'}} >\r\n                                    <tbody style={{borderBottom:'1px solid white'}} >\r\n                                    <SkillsList add={props.addNewSkillsRow} handleChange={props.handleChange} delete={props.clickOnSkillsDelete} eid={idx} skills={props.employee[idx].skills}  />\r\n                                    </tbody>\r\n                                    </table> \r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"form-group row\" style={{padding:'10px'}} >\r\n                                    <label htmlFor={dateOfBirth}  className=\"col-sm-2 col-form-label\">Date Of Birth</label>\r\n                                    <div className=\"col-sm-4\">\r\n                                    <input type=\"date\" name=\"dateOfBirth\" onChange={(e)=>props.handleChange(idx,e)} data-id={idx} id={dateOfBirth} max={newDate} className=\"form-control\"></input>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-1\"></div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\nexport default EmployeeList;","import React from \"react\";\r\nconst ViewData = (props) => {\r\n    return (\r\n    <div className=\"row\">\r\n    <div className=\"col-sm-12\">\r\n        <div className=\"col-sm-6 mx-auto\" >\r\n        <div className=\"card\">\r\n            <div className=\"card-header text-center\"> Data </div>\r\n            <div className=\"card-body\">\r\n            {\r\n                props.employee.map((val, idx) => {\r\n                                                return (\r\n                                                    <div key={val.e_index}>\r\n\r\n                                                        <div className=\"row\">\r\n                                                            <dl class=\"row\">\r\n                                                                <dt class=\"col-sm-3\">Employee</dt>\r\n                                                                <dd class=\"col-sm-9\">#{idx + 1}</dd>\r\n                                                                <dt class=\"col-sm-3\">NAME</dt>\r\n                                                                <dd class=\"col-sm-9\">{val.name}</dd>\r\n                                                                <dt class=\"col-sm-3\">Designation</dt>\r\n                                                                <dd class=\"col-sm-9\">{val.designation}</dd>\r\n                                                                <dt class=\"col-sm-3\">Contact</dt>\r\n                                                                <dd class=\"col-sm-9\">{val.contact.map((v, i) => {\r\n                                                                    return (<p key={v.c_index} style={{ marginBottom: '0' }}>{v.type} - {v.number}</p>)\r\n                                                                })}</dd>\r\n                                                                <dt class=\"col-sm-3\">Skills</dt>\r\n                                                                <dd class=\"col-sm-9\">{val.skills.map((v, i) => {\r\n                                                                    return (<span key={v.s_index}>{i === 0 ? (\r\n                                                                        <span>{v.skills} </span>\r\n                                                                    ) : (\r\n                                                                        <span> , {v.skills} </span>\r\n                                                                    )}</span>)\r\n                                                                })}</dd>\r\n                                                            </dl>\r\n                                                        </div>\r\n                                                        <hr></hr>\r\n                                                    </div>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col-sm-2\"></div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"row\" style={{padding:'10px'}} >\r\n                        <div class=\"col text-center\" >\r\n                            <button className=\"btn btn-primary text-center\"  onClick={()=>props.downloadFile()}>Download </button>\r\n                        </div>\r\n                    </div>                          \r\n                            </div>\r\n    )}\r\n\r\nexport default ViewData;","import React from 'react';\r\nimport EmployeeList from '../components/employeeList'\r\nimport ViewData from '../components/viewData'\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        employee: [{\r\n            e_index: Math.random(),\r\n            name: '',\r\n            designation: '',\r\n            contact: [{ c_index: Math.random(), type: '', number: '' }],\r\n            skills: [{ s_index: Math.random(), skills: '' }],\r\n            dateOfBirth: '',\r\n        }],\r\n        viewData: 0\r\n    }\r\n    handleChange = (i,e) => {\r\n            if ([\"type\", \"number\"].includes(e.target.name)  ) {\r\n                let contact = [...this.state.employee[i].contact]\r\n                contact[e.target.dataset.id][e.target.name] = e.target.value;\r\n                console.log(e.target.dataset.id,e.target.name)\r\n            }\r\n            if ([\"skills\"].includes(e.target.name)) {\r\n                let skills = [...this.state.employee[i].skills]\r\n                skills[e.target.dataset.id][e.target.name] = e.target.value;\r\n            }\r\n        \r\n        if ([\"name\", \"designation\", \"dateOfBirth\"].includes(e.target.name)) {\r\n            let employee = [...this.state.employee]\r\n            employee[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n        else {\r\n            this.setState({ [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n    addNewEmployee = () => {\r\n        this.setState((prevState) => ({\r\n            employee: [...prevState.employee, {\r\n                e_index: Math.random(), name: '', designation: '', contact: [{ c_index: Math.random(), type: '', number: '' }],\r\n                skills: [{ s_index: Math.random(), skills: '' }],\r\n                dateOfBirth: '',\r\n            }]\r\n        }));\r\n    }\r\n    deleteNewEmployee = (record) => {\r\n        this.setState((prevState) => ({\r\n            employee: this.state.employee.filter((sindex) => record !== sindex)\r\n        }\r\n        ))\r\n    }\r\n\r\n    addNewConactRow = (eindex) => {\r\n        if (this.state.employee[eindex].contact.length < 4) {\r\n            this.setState((prevState) => ({\r\n                employee: [\r\n                    ...prevState.employee.slice(0, eindex),\r\n                    {\r\n                        ...prevState.employee[eindex],\r\n                        contact: [...prevState.employee[eindex].contact, { c_index: Math.random(), type: '', number: '' }]\r\n                    },\r\n                    ...prevState.employee.slice(eindex + 1)\r\n                ]\r\n            }\r\n            ));\r\n        }\r\n        else {\r\n\r\n            alert(\"Maximum number Of contacts Reached\")\r\n        }\r\n\r\n    }\r\n\r\n    addNewSkillsRow = (eindex) => {\r\n        this.setState((prevState) => ({\r\n            employee: [\r\n                ...prevState.employee.slice(0, eindex),\r\n                {\r\n                    ...prevState.employee[eindex],\r\n                    skills: [...prevState.employee[eindex].skills, { s_index: Math.random(), skills: \"\" }],\r\n                },\r\n                ...prevState.employee.slice(eindex + 1)\r\n            ]\r\n        }\r\n        ));\r\n    }\r\n\r\n    deteteContactRow = (eindex, index) => {\r\n        if (eindex === 0) {\r\n            this.setState((prevState) => ({\r\n                employee: [\r\n                    {\r\n                        ...prevState.employee[eindex],\r\n                        contact: this.state.employee[eindex].contact.filter((sindex) => index !== sindex),\r\n                    },\r\n                    ...prevState.employee.slice(eindex + 1)\r\n                ]\r\n            }));\r\n        } else if (eindex >= 1) {\r\n            this.setState((prevState) => ({\r\n                employee: [\r\n                    ...prevState.employee.slice(0, eindex),\r\n                    {\r\n                        ...prevState.employee[eindex],\r\n                        contact: this.state.employee[eindex].contact.filter((sindex) => index !== sindex),\r\n                    },\r\n                    ...prevState.employee.slice(eindex + 1)\r\n                ]\r\n            }\r\n            ));\r\n        }\r\n    }\r\n    deteteSkillsRow = (eindex, index) => {\r\n        if (eindex === 0) {\r\n            this.setState((prevState) => ({\r\n                employee: [\r\n                    {\r\n                        ...prevState.employee[eindex],\r\n                        skills: this.state.employee[eindex].skills.filter((sindex) => index !== sindex),\r\n                    },\r\n                    ...prevState.employee.slice(eindex + 1)\r\n                ]\r\n            }));\r\n        } else if (eindex >= 1) {\r\n            this.setState((prevState) => ({\r\n                employee: [\r\n                    ...prevState.employee.slice(0, eindex),\r\n                    {\r\n                        ...prevState.employee[eindex],\r\n                        skills: this.state.employee[eindex].skills.filter((sindex) => index !== sindex),\r\n                    },\r\n                    ...prevState.employee.slice(eindex + 1)\r\n                ]\r\n            }\r\n            ));\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState(() => ({\r\n            viewData: 1\r\n        }));\r\n    }\r\n    downloadFile = async () => {\r\n        const edata = this.state.employee.slice(0, this.state.employee.length);\r\n        for (let index = 0; index < edata.length; index++) {\r\n            delete edata[index].e_index;\r\n            for (let j = 0; j < edata[index].contact.length; j++) {\r\n                delete edata[index].contact[j].c_index;\r\n            }\r\n            for (let k = 0; k < edata[index].skills.length; k++) {\r\n                delete edata[index].skills[k].s_index;\r\n            }\r\n        }\r\n        const fileName = \"Employee Deatils\";\r\n        const json = JSON.stringify(edata);\r\n        const blob = new Blob([json], { type: 'application/json' });\r\n        const href = await URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = href;\r\n        link.download = fileName + \".json\";\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        this.setState((e) => ({\r\n            employee: [{\r\n                e_index: Math.random(),\r\n                name: '',\r\n                designation: '',\r\n                contact: [{ c_index: Math.random(), type: '', number: '' }],\r\n                skills: [{ s_index: Math.random(), skills: '' }],\r\n                dateOfBirth: '',\r\n            }],\r\n            viewData: 0\r\n        }))\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <EmployeeList handleChange={this.handleChange.bind(this)}  deleteNewEmployee={this.deleteNewEmployee.bind(this)} employee={this.state.employee} clickOnContactDelete={this.deteteContactRow.bind(this)} addNewConactRow={this.addNewConactRow} addNewSkillsRow={this.addNewSkillsRow} clickOnSkillsDelete={this.deteteSkillsRow} />\r\n                {    (this.state.viewData === 1)?(\r\n                    <div></div>\r\n                ):(\r\n                    <div class=\"container\" style={{padding:'10px'}}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-primary text-center\">View Data</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n                </form>\r\n                <div class=\"container\" style={{padding:'10px'}} >\r\n                    <div class=\"row\">\r\n                        <div class=\"col text-center\">\r\n                            <button onClick={() => this.addNewEmployee()} className=\"btn btn-primary text-center\">Add Employee</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        (this.state.viewData === 1) ? (\r\n                            <ViewData employee={this.state.employee} downloadFile={this.downloadFile} />\r\n                        ) : (\r\n                            <div />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Form;","import Form from './Pages/formpage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}